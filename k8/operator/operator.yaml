apiVersion: v1
kind: Namespace
metadata:
  name: operator
---
apiVersion: v1
stringData:
  accessKeyId: ACCESSKEYID
  region: eu-west-1
  secretAccessKey: SECERTACCESSKEY 
kind: Secret
metadata:
  name: aws-secret
  namespace: operator
type: Opaque
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secret-operator
  namespace: operator
  labels:
    app: external-secret-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: operator
  name: external-secret-operator-role
  labels:
    app: external-secret-operator
rules:
  - apiGroups:
      - jkobejs.github.io
    resources:
      - externalsecrets
      - externalsecrets/status
    verbs: [ "*" ]
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs: [ "*" ]
  - apiGroups: [ "" ]
    resources:
      - secrets
    verbs: [ "*" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: operator
  name: external-secret-operator-role-binding
  labels:
    app: external-secret-operator
subjects:
  - kind: ServiceAccount
    name: external-secret-operator
    namespace: operator
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: Role
  name: external-secret-operator-role
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: operator
  name: external-secret-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: external-secret-operator
  template:
    metadata:
      labels:
        app: external-secret-operator
    spec:
      serviceAccountName: external-secret-operator
      containers:
        - name: external-secret-operator
          image: external-secret-operator:0.6.0-SNAPSHOT
          imagePullPolicy: Never
          env:
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: region
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: accessKeyId
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: secretAccessKey
          ports:
            - containerPort: 9000
              name: http
          livenessProbe:
            httpGet:
              path: /health
              port: 9000
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 9000
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  namespace: operator
  name: external-secret-operator
spec:
  selector:
    app: external-secret-operator
  ports:
    - name: http
      protocol: TCP
      port: 9000
      targetPort: http
